#include "stdafx.h"
#include "Emulator.h";

int Emulator::opcode_00() { NOP(); return 4; };
int Emulator::opcode_01() { CPU_16BIT_LOAD(m_RegisterBC.reg); return 12; };
int Emulator::opcode_03() { CPU_16BIT_INC(m_RegisterBC.reg); return 8; };
int Emulator::opcode_04() { CPU_8BIT_INC(m_RegisterBC.hi); return 4; };
int Emulator::opcode_05() { CPU_8BIT_DEC(m_RegisterBC.hi); return 4; };
int Emulator::opcode_0D() { CPU_8BIT_DEC(m_RegisterBC.lo); return 4; };
int Emulator::opcode_0E() { CPU_8BIT_LOAD(m_RegisterBC.lo); return 8; };
int Emulator::opcode_11() { CPU_16BIT_LOAD(m_RegisterDE.reg); return 12; };
int Emulator::opcode_12() { writeMemory(m_RegisterDE.reg, m_RegisterAF.hi); return 8; };
int Emulator::opcode_13() { CPU_16BIT_INC(m_RegisterDE.reg); return 8; };
int Emulator::opcode_14() { CPU_8BIT_INC(m_RegisterDE.hi); return 4; };
int Emulator::opcode_15() { CPU_8BIT_DEC(m_RegisterDE.hi); return 4; };
int Emulator::opcode_18() { CPU_JUMP_IMMEDIATE(false, 0, false); return 8; };
int Emulator::opcode_1C() { CPU_8BIT_INC(m_RegisterDE.lo); return 4; };
int Emulator::opcode_1D() { CPU_8BIT_DEC(m_RegisterDE.lo); return 4; };
int Emulator::opcode_1F() { CPU_RRC(m_RegisterAF.hi); return 4; };
int Emulator::opcode_20() { CPU_JUMP_IMMEDIATE(true, FLAG_Z, false); return 8; };
int Emulator::opcode_21() { CPU_16BIT_LOAD(m_RegisterHL.reg); return 12; };
int Emulator::opcode_23() { CPU_16BIT_INC(m_RegisterHL.reg); return 8; };
int Emulator::opcode_25() { CPU_8BIT_DEC(m_RegisterHL.hi); return 4; };
int Emulator::opcode_28() { CPU_JUMP_IMMEDIATE(true, FLAG_Z, true); return 8; };
int Emulator::opcode_2A() { CPU_LD_I(m_RegisterAF.hi, m_RegisterHL.reg); return 8; };
int Emulator::opcode_2D() { CPU_8BIT_DEC(m_RegisterHL.lo); return 4; };
int Emulator::opcode_30() { CPU_JUMP_IMMEDIATE(true, FLAG_C, false); return 8; };
int Emulator::opcode_31() { CPU_16BIT_LOAD(m_StackPointer.reg); return 12; };
int Emulator::opcode_33() { CPU_16BIT_INC(m_StackPointer.reg); return 8; };
int Emulator::opcode_3D() { CPU_8BIT_DEC(m_RegisterAF.hi); return 4; };
int Emulator::opcode_3E() { CPU_8BIT_LOAD(m_RegisterAF.hi); return 8; };
int Emulator::opcode_47() { CPU_REG_LOAD(m_RegisterBC.hi, m_RegisterAF.hi); return 4; };
int Emulator::opcode_78() { CPU_REG_LOAD(m_RegisterAF.hi, m_RegisterBC.hi); return 4; };
int Emulator::opcode_7C() { CPU_REG_LOAD(m_RegisterAF.hi, m_RegisterHL.hi); return 4; }
int Emulator::opcode_7D() { CPU_REG_LOAD(m_RegisterAF.hi, m_RegisterHL.lo); return 4; };
int Emulator::opcode_A0() { CPU_AND(m_RegisterBC.hi, false); return 4; };
int Emulator::opcode_A1() { CPU_AND(m_RegisterBC.lo, false); return 4; };
int Emulator::opcode_A2() { CPU_AND(m_RegisterDE.hi, false); return 4; };
int Emulator::opcode_A3() { CPU_AND(m_RegisterDE.lo, false); return 4; };
int Emulator::opcode_A4() { CPU_AND(m_RegisterHL.hi, false); return 4; };
int Emulator::opcode_A5() { CPU_AND(m_RegisterHL.lo, false); return 4; };
int Emulator::opcode_90() { CPU_8BIT_SUB(m_RegisterAF.hi, m_RegisterBC.hi, false, false); return 8; };
int Emulator::opcode_A7() { CPU_AND(m_RegisterAF.hi, false); return 4; };
int Emulator::opcode_AF() { CPU_8BIT_XOR(m_RegisterAF.hi, m_RegisterAF.hi); return 4; };
int Emulator::opcode_B0() { CPU_OR(m_RegisterBC.hi); return 4; };
int Emulator::opcode_B1() { CPU_OR(m_RegisterBC.lo); return 4; };
int Emulator::opcode_B2() { CPU_OR(m_RegisterDE.hi); return 4; };
int Emulator::opcode_B3() { CPU_OR(m_RegisterDE.lo); return 4; };
int Emulator::opcode_B4() { CPU_OR(m_RegisterHL.hi); return 4; };
int Emulator::opcode_B5() { CPU_OR(m_RegisterHL.lo); return 4; };
int Emulator::opcode_B7() { CPU_OR(m_RegisterAF.hi); return 4; };
int Emulator::opcode_C0() { CPU_RETURN(true, FLAG_Z, false); return 8; };
int Emulator::opcode_C1() { CPU_STACK_POP(m_RegisterBC.reg); return 12; };
int Emulator::opcode_C3() { CPU_JUMP(false, 0, false); return 12; };
int Emulator::opcode_C5() { CPU_STACK_PUSH(m_RegisterBC.reg); return 16; };
int Emulator::opcode_C8() { CPU_RETURN(true, FLAG_Z, true); return 8; };
int Emulator::opcode_C9() { CPU_RETURN(false, 0, false); return 8; };
int Emulator::opcode_CD() { CPU_CALL(false, 0, false); return 12; };
int Emulator::opcode_CE() { CPU_ADC(get_byte_from_pc()); return 8; };
int Emulator::opcode_D0() { CPU_RETURN(true, FLAG_C, false); return 8; };
int Emulator::opcode_D1() { CPU_STACK_POP(m_RegisterDE.reg); return 12; };
int Emulator::opcode_D5() { CPU_STACK_PUSH(m_RegisterDE.reg); return 16; };
int Emulator::opcode_D6() { CPU_8BIT_SUB(m_RegisterAF.hi, 0, true, false); return 8; };
int Emulator::opcode_D8() { CPU_RETURN(true, FLAG_C, true); return 8; };
int Emulator::opcode_E0() { CPU_LDH_INTO_DATA(); return 12; };
int Emulator::opcode_E1() { CPU_STACK_POP(m_RegisterHL.reg); return 12; };
int Emulator::opcode_E5() { CPU_STACK_PUSH(m_RegisterHL.reg); return 16; };
int Emulator::opcode_E6() { CPU_AND(0, true); return 8; };
int Emulator::opcode_EA() { CPU_LD_TO_ADDRESS(m_RegisterAF.hi);  return 16; };
int Emulator::opcode_F1() { CPU_STACK_POP(m_RegisterAF.reg); return 12; };
int Emulator::opcode_F3() { m_InterruptMaster = false; return 4; };
int Emulator::opcode_F5() { CPU_STACK_PUSH(m_RegisterAF.reg); return 16; };
int Emulator::opcode_FB() { m_InterruptMaster = true; return 4; };